#Server configurations:
#server.port=0
spring.data.mongodb.uri=${MOGODB_URI}

server.error.include-message=always
server.error.include-binding-errors=always

#Cloudcarafka
spring.kafka.bootstrap-servers=glider.srvs.cloudkafka.com:9094
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
spring.kafka.properties.sasl.jaas.config=${KAFKA_CONFIG}


#Spring Cloud Stream
spring.cloud.function.definition=sendProfile;sendAuthenticatedProfileToComment;receiveUpdatedProfile;receiveProblemIdToDelete;sendNameToChange;sendAuthorToRemove;

#IN (Group)
#For update profile from Problem and Comment ->
spring.cloud.stream.bindings.receiveUpdatedProfile-in-0.destination=dqtiwmxa-updateProfile
spring.cloud.stream.bindings.receiveUpdatedProfile-in-0.group=dqtiwmxa-updateProfileGroup
#For update all profiles activity from Problem ->
spring.cloud.stream.bindings.receiveProblemIdToDelete-in-0.destination=dqtiwmxa-removeAllActivities
spring.cloud.stream.bindings.receiveProblemIdToDelete-in-0.group=dqtiwmxa-removeAllActivitiesGroup

#OUT
#Problem
#Send Profile to Problem and Comment ->
spring.cloud.stream.bindings.sendProfile-out-0.destination=dqtiwmxa-authenticated
#Send New Profile Name to Problem/Comment/Solution ->
spring.cloud.stream.bindings.sendNameToChange-out-0.destination=dqtiwmxa-authorNewName
#Send author Profile to remove everything created by in Problem/Comment/Solution->
spring.cloud.stream.bindings.sendAuthorToRemove-out-0.destination=dqtiwmxa-removeAuthor


#Spring-boot-starter-mail configurations:
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_ADDRESS}
spring.mail.password=${EMAIL_PASSWORD}

spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.port=587

