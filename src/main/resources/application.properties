#Server configurations:
#server.port=0
spring.data.mongodb.uri=${MOGODB_URI}

server.error.include-message=always
server.error.include-binding-errors=always

#JWT Token
jwt.secret-key=hqUerWWqiExZNqIANXb4Xe8upVEaLtBvOJZkza1+desHl5kyrHSFCnDgI0OGCsT1kGJhWxCfxKvWmj3EAH0wTA==
#logging.level.org.springframework.security=DEBUG


#Cloudcarafka
spring.kafka.bootstrap-servers=glider.srvs.cloudkafka.com:9094
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="ssppshpm" password="uipBeio0BdwVedfCCqy6vhtBDcbeuUpR";


spring.cloud.function.definition=receiveDataFromProblem;receiveDataFromComment;receiveDataFromSolution;sendProfile;
#OUT
#Send authenticated Profile everyone ->
spring.cloud.stream.bindings.sendProfile-out-0.destination=ssppshpm-authenticated
#IN
# Problem data ->
spring.cloud.stream.bindings.receiveDataFromProblem-in-0.destination=ssppshpm-problemData
spring.cloud.stream.bindings.receiveDataFromProblem-in-0.group=ssppshpm-problemDataGroup
# Comment data ->
spring.cloud.stream.bindings.receiveDataFromComment-in-0.destination=ssppshpm-commentData
spring.cloud.stream.bindings.receiveDataFromComment-in-0.group=ssppshpm-commentDataGroup
# Solution data ->
spring.cloud.stream.bindings.receiveDataFromSolution-in-0.destination=ssppshpm-solutionData
spring.cloud.stream.bindings.receiveDataFromSolution-in-0.group=ssppshpm-solutionDataGroup

#Spring-boot-starter-mail configurations:
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_ADDRESS}
spring.mail.password=${EMAIL_PASSWORD}

spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.port=587

